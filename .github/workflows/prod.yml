name: prod
on:
  workflow_dispatch:
jobs:
  infra-deploy:
    runs-on: ubuntu-latest
    environment: prod
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ap-south-1
    steps:
      - uses: actions/checkout@v2
        with:
          path: cms-frontend
          fetch-depth: '0'
          ref: release/prod
      - name: Setup SSH
        uses: MrSquaare/ssh-setup-action@v1
        with:
          host: github.com
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '12.10.0'
#      - name: Terraform Plan And Apply
#        run: |
#          sudo apt-get -y install git curl
#          sudo curl -fsSL https://get.docker.com -o get-docker.sh
#          git clone git@github.com:ZEE-5/kelton-aws-terraform-modules.git -b prod
#          cd kelton-aws-terraform-modules/
#          rm -rf .terraform
#          terraform init
#          terraform workspace list
#          terraform workspace select prod
#          terraform validate
#          terraform providers
#          terraform init
#          terraform plan
#          terraform apply -input=false -auto-approve
      - name: Deploy Images in ECR
        shell: bash
        run: |
          sudo pip3 install awscli
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_DEFAULT_REGION --profile default
          aws configure set profile.default.role_arn "arn:aws:iam::963788245243:role/z5x_jenkins"
          aws configure set profile.default.source_profile default
          cd cms-frontend
          touch .env
          echo "${{ secrets.BACKEND_API_URL }}" >> .env
          echo "${{ secrets.LOGINURL }}" >> .env
          echo "${{ secrets.ADFS_LOGIN_URL }}" >> .env
          echo "${{ secrets.GOOGLE_LOGIN_URL }}" >> .env
          echo "${{ secrets.LOGOUT_URL }}" >> .env
          echo "${{ secrets.ADFS_LOGOUT_URL }}" >> .env
          echo "${{ secrets.IMAGE_BASE_URL }}" >> .env
          echo "${{ secrets.LOGGING_MAIN_URL }}" >> .env
          echo "${{ secrets.LOGGING_REPORTING_URL }}" >> .env
          echo "${{ secrets.LOGGING_KEY }}" >> .env
          echo "${{ secrets.BACKEND_API_PLACEHOLDER_URL }}" >> .env
          echo "${{ secrets.MONGODB_URI }}" >> .env
          echo "${{ secrets.MONGODB_USER }}" >> .env
          echo "${{ secrets.MONGODB_PASSWORD }}" >> .env
          echo "${{ secrets.MONGODB_PORT }}" >> .env
          echo "${{ secrets.MONGODB_AUTHSOURCE }}" >> .env
          echo "${{ secrets.MONGODB_NAME }}" >> .env
          echo "${{ secrets.CLOUDINARY_BASE_URL }}" >> .env
          
          cat .env
          npm install
          npm run build
          pip3 install awscli
          aws s3 sync dist s3://prod-ott-cms-frontend  --profile default
          aws cloudfront create-invalidation --distribution-id "E2HQ9EBA8GBVBT" --paths "/*" --profile default
          
