  
name: test_pipeline

# Controls when the workflow will run
on:
  workflow_dispatch:

     
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  infra-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: dev
    env: 
      1: '${{secrets.ADFS_LOGIN_URL}}'
      2: '${{secrets.BACKEND_API_PLACEHOLDER_URL}}'
      

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
          
      # Runs a set of commands using the runners shell
      - name: Test
        run: |
          ls -la
          echo 'ADFS_LOGIN_URL'
          echo '${{secrets.ADFS_LOGIN_URL}}' | base64
          echo 'ADFS_LOGOUT_URL'
          echo '${{secrets.ADFS_LOGOUT_URL}}' | base64
          echo 'BACKEND_API_PLACEHOLDER_URL'
          echo '${{secrets.BACKEND_API_PLACEHOLDER_URL}}' | base64
          echo 'BACKEND_API_URL'
          echo '${{secrets.BACKEND_API_URL}}' | base64
          echo 'BACKEND_API_UTILS_URL'
          echo '${{secrets.BACKEND_API_UTILS_URL}}' | base64
          echo 'GOOGLE_LOGIN_URL'
          echo '${{secrets.GOOGLE_LOGIN_URL}}' | base64
          echo 'IMAGE_BASE_URL'
          echo '${{secrets.IMAGE_BASE_URL}}' | base64
          echo 'LOGGING_KEY'
          echo '${{secrets.LOGGING_KEY}}' | base64
          echo 'LOGGING_MAIN_URL'
          echo '${{secrets.LOGGING_MAIN_URL}}' | base64
          echo 'LOGGING_REPORTING_URL'
          echo '${{secrets.LOGGING_REPORTING_URL}}' | base64
          echo 'LOGINURL'
          echo '${{secrets.LOGINURL}}' | base64
          echo 'LOGOUT_URL'
          echo '${{secrets.LOGOUT_URL}}' | base64
          echo 'PLACEHOLDER_TEMPLATE_URL'
          echo '${{secrets.PLACEHOLDER_TEMPLATE_URL}}' | base64
          echo 'CLOUDINARY_BASE_URL'
          echo '${{secrets.CLOUDINARY_BASE_URL}}' | base64

          #echo ${{secrets.BACKEND_API_PLACEHOLDER_URL}} >> foo && cut -c1-8 foo
          #env > testfile
          #cat testfile > test2file
          #cat test2file
          
      - name: Test-py
        run: |
          import os
          print("below is secret")
          print(os.getenv("1"))
          secrets = ""
          for q in (os.getenv("1")):
            secrets = secrets + q
          #secrets = "a"+secrets+"a"
          #secrets = secrets[1:] + secrets[:-1]
          #secrets1 = secrets.replace('***','')
          print(secrets[1:])
          print(secrets[:-1])
          print( "1" + secrets[0])
          print(secrets[-1]+ "n")
          print("1" + secrets[0] + secrets[1:] + secrets[:-1] + secrets[-1]+ "n" )
          
          #print(secrets1)
        shell: python
